import React from 'react';
import { useForm } from 'react-hook-form';

interface CategoryFormData {
  name: string;
  icon?: string;
  color?: string;
}

const iconOptions = [
  { label: 'üçî', value: 'üçî' },
  { label: 'üéÆ ', value: 'üéÆ' },
  { label: 'üìö ', value: 'üìö' },
  { label: 'üè•', value: 'üè•' },
  { label: 'üöó ', value: 'üöó' },
  { label: 'üíº ', value: 'üíº' },
  { label: 'üéÅ ', value: 'üéÅ' },
  { label: 'üè† ', value: 'üè†' },
  { label: 'üõí ', value: 'üõí' },
  { label: 'üßæ ', value: 'üßæ' },
];

const CreateCategory: React.FC = () => {
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<CategoryFormData>();

  const onSubmit = (data: CategoryFormData) => {
    console.log('D·ªØ li·ªáu danh m·ª•c g·ª≠i ƒëi:', data);
    // G·ª≠i API ho·∫∑c x·ª≠ l√Ω ti·∫øp
  };

  return (
    <form
      onSubmit={handleSubmit(onSubmit)}
      className="max-w-xl mx-auto bg-white p-6 rounded-md shadow-md space-y-6"
    >
      <h2 className="text-2xl font-semibold mb-4">T·∫°o danh m·ª•c h√≥a ƒë∆°n</h2>

      {/* Name */}
      <div>
        <label className="block mb-1 font-medium" htmlFor="name">
          T√™n danh m·ª•c <span className="text-red-500">*</span>
        </label>
        <input
          id="name"
          type="text"
          {...register('name', { required: 'T√™n danh m·ª•c l√† b·∫Øt bu·ªôc' })}
          className={`w-full border rounded-md px-3 py-2 focus:outline-none focus:ring-2 ${
            errors.name
              ? 'border-red-500 focus:ring-red-500'
              : 'border-gray-300 focus:ring-blue-500'
          }`}
          placeholder="Nh·∫≠p t√™n danh m·ª•c"
        />
        {errors.name && (
          <p className="text-red-500 mt-1 text-sm">{errors.name.message}</p>
        )}
      </div>

      {/* Icon */}
      <div>
        <label className="block mb-1 font-medium" htmlFor="icon">
          Bi·ªÉu t∆∞·ª£ng (Icon)
        </label>
        <select
          id="icon"
          {...register('icon')}
          className="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white"
          defaultValue=""
        >
          <option value="" disabled>
            Ch·ªçn bi·ªÉu t∆∞·ª£ng
          </option>
          {iconOptions.map((option) => (
            <option key={option.value} value={option.value}>
              {option.label}
            </option>
          ))}
        </select>
      </div>

      {/* Color */}
      <div>
        <label className="block mb-1 font-medium" htmlFor="color">
          M√†u s·∫Øc
        </label>
        <input
          id="color"
          type="color"
          {...register('color')}
          className="w-12 h-10 p-1 border border-gray-300 rounded-md"
        />
      </div>

      {/* Submit */}
      <button
        type="submit"
        className="w-full bg-blue-600 text-white py-2 rounded-md hover:bg-blue-700 transition-colors duration-200"
      >
        L∆∞u danh m·ª•c
      </button>
    </form>
  );
};

export default CreateCategory;
